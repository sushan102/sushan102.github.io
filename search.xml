<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用GitHub+Hexo搭建个人静态博客教程—第七篇</title>
      <link href="/posts/1410804403/"/>
      <url>/posts/1410804403/</url>
      
        <content type="html"><![CDATA[<!-- build time:Fri Jan 24 2020 22:19:09 GMT+0800 (GMT+08:00) --><p>嗨，大家好，今天还是继续next主题的美化教程。加油。</p><a id="more"></a><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><h3 id="1-修改主题页面布局为圆角"><a href="#1-修改主题页面布局为圆角" class="headerlink" title="1.修改主题页面布局为圆角"></a>1.修改主题页面布局为圆角</h3><p>修改主题页面为圆角，有两种方法：:smile:</p><h4 id="第一种："><a href="#第一种：" class="headerlink" title="第一种："></a>第一种：</h4><p>打开文件，路径：<code>/themes/next/source/css/_variables/custom.styl</code></p><p><img src="/posts/1410804403/1.png" alt></p><p>复制粘贴以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改主题页面布局为圆角</span><br><span class="line">&#x2F;&#x2F; Variables of Gemini scheme</span><br><span class="line">&#x2F;&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">@import &quot;Pisces.styl&quot;;</span><br><span class="line">&#x2F;&#x2F; Settings for some of the most global styles.</span><br><span class="line">&#x2F;&#x2F; --------------------------------------------------</span><br><span class="line">$body-bg-color                    &#x3D; #eee</span><br><span class="line">&#x2F;&#x2F; Borders.</span><br><span class="line">&#x2F;&#x2F; --------------------------------------------------</span><br><span class="line">$box-shadow-inner                 &#x3D; 0 2px 2px 0 rgba(0,0,0,.12), 0 3px 1px -2px rgba(0,0,0,.06), 0 1px 5px 0 rgba(0,0,0,.12)</span><br><span class="line">$box-shadow                       &#x3D; 0 2px 2px 0 rgba(0,0,0,.12), 0 3px 1px -2px rgba(0,0,0,.06), 0 1px 5px 0 rgba(0,0,0,.12), 0 -1px .5px 0 rgba(0,0,0,.09)</span><br><span class="line">$border-radius-inner              &#x3D; initial</span><br><span class="line">$border-radius                    &#x3D; initial</span><br><span class="line">$border-radius-inner            &#x3D; 15px 15px 15px 15px;</span><br><span class="line">$border-radius                  &#x3D; 15px;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/2.png" alt></p><p>保存后本地预览，可以看到四周都为圆角了。</p><p><img src="/posts/1410804403/3.png" alt></p><h4 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h4><p>打开文件，路径：<code>\themes\next\source\css\_variables\Gemini.styl</code> ，添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 修改主题页面布局为圆角</span><br><span class="line">$border-radius-inner            &#x3D; 15px 15px 15px 15px;</span><br><span class="line">$border-radius                  &#x3D; 15px;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/4.png" alt></p><p>保存后本地预览，四周为圆角。</p><p><img src="/posts/1410804403/5.png" alt></p><h3 id="2-去掉顶部黑线"><a href="#2-去掉顶部黑线" class="headerlink" title="2.去掉顶部黑线"></a>2.去掉顶部黑线</h3><p>顶部黑线如下图：</p><p><img src="/posts/1410804403/6.png" alt></p><p>打开文件，路径：<code>themes\next\source\css\_custom\custom.styl</code> ，添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  &#x2F;&#x2F;去掉顶部黑线：</span><br><span class="line">.headband &#123;display:none;&#125;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/7.png" alt></p><p>保存后本地预览，顶部黑线已经去掉。</p><p><img src="/posts/1410804403/8.png" alt></p><h3 id="3-添加动态背景—粒子漂浮聚合"><a href="#3-添加动态背景—粒子漂浮聚合" class="headerlink" title="3.添加动态背景—粒子漂浮聚合"></a>3.添加动态背景—粒子漂浮聚合</h3><p>我还以为把动态背景已经写到了教程里了，结果一看没有，赶紧补上。还有好几种动态背景，之后补上。</p><p>该功能由 <code>theme-next-canvas-nest</code> 插件提供，在根目录下执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-canvas-nest themes&#x2F;next&#x2F;source&#x2F;lib&#x2F;canvas-nest</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/9.png" alt></p><p>然后在<code>主题配置</code>文件中找到<code>canvas_nest</code>，修改为：<code>canvas_nest: true</code> 。</p><p><img src="/posts/1410804403/10.png" alt></p><p>保存后本地预览，可以看到线条漂浮聚合效果。</p><p><img src="/posts/1410804403/11.gif" alt></p><h3 id="4-文章添加结束标记"><a href="#4-文章添加结束标记" class="headerlink" title="4.文章添加结束标记"></a>4.文章添加结束标记</h3><p>在路径：<code>themes\next\layout\_macro</code>下新建<code>passage-end-tag.swig</code>文件。</p><p><img src="/posts/1410804403/12.png" alt></p><p>打开<code>passage-end-tag.swig</code>，粘贴以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &lt;div style&#x3D;&quot;text-align:center;color:#bfbfbf;font-size:16px;&quot;&gt;</span><br><span class="line">      &lt;span&gt;-------- 本文结束 &lt;&#x2F;span&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;fa fa-paw&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">      &lt;span&gt; 感谢阅读 --------&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>字体、颜色等等我按照我的喜好修改的，你们按照自己的喜好来。</p><p><img src="/posts/1410804403/13.png" alt></p><p>打开文件，路径：<code>themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前（如果找不到位置的按照我下图的位置添加）添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&#123;% if not is_index %&#125;</span><br><span class="line">&#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/14.png" alt></p><p>打开<code>主题配置</code>文件，在最后位置添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_end_tag:</span><br><span class="line">  enabled: true  # 是否开启文末的本文结束标记</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/15.png" alt></p><p>保存后本地预览，打开文章后会发现文章结束时出现以下效果。</p><p><img src="/posts/1410804403/16.png" alt></p><h3 id="5-设置标题样式"><a href="#5-设置标题样式" class="headerlink" title="5.设置标题样式"></a>5.设置标题样式</h3><p>打开文件，路径：<code>themes\next\source\css\_common\components\post\post.styl</code></p><p>粘贴以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*修改博文标题样式*&#x2F;</span><br><span class="line">.page-post-detail .post-title &#123;</span><br><span class="line">  font-size: 26px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  word-break: break-word;</span><br><span class="line">  font-weight: $posts-expand-title-font-weight</span><br><span class="line">  background-color: #b9d3ee;</span><br><span class="line">  border-radius:.3em;</span><br><span class="line">  line-height:1em;</span><br><span class="line">  padding-bottom:.12em;</span><br><span class="line">  padding-top:.12em;</span><br><span class="line">  box-shadow:2px 2px 7px #9fb6cd;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    font-size: 22px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/17.png" alt></p><p>保存后本地预览，可以看到文章标题样式效果出现。</p><p><img src="/posts/1410804403/18.png" alt></p><p>如果想把主页文章标题一起修改，那么只要去掉 <code>.page-post-detail</code>即可。如下：</p><p><img src="/posts/1410804403/19.png" alt></p><p>保存后本地预览，可以看到主页文章标题也已经有了样式。</p><p><img src="/posts/1410804403/20.png" alt></p><h3 id="6-修改文章底部-为图标"><a href="#6-修改文章底部-为图标" class="headerlink" title="6.修改文章底部#为图标"></a>6.修改文章底部#为图标</h3><p>我们正常写的文章，如果有标签的话会在文章末尾出现标签。像这样：</p><p><img src="/posts/1410804403/21.png" alt></p><p>但是#不太好看，我们把它换为图标。</p><p>打开文件，路径：<code>/themes/next/layout/_macro/post.swig</code> 搜索找到 <code>rel=&quot;tag&quot;&gt;#</code> 把#替换为如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;fa fa-tag&quot;&gt;&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/22.png" alt></p><p>保存后本地预览，可以看到文章末尾标签不再是#了，换成标签图标了。</p><p><img src="/posts/1410804403/23.png" alt></p><h3 id="7-设置博客的图标"><a href="#7-设置博客的图标" class="headerlink" title="7.设置博客的图标"></a>7.设置博客的图标</h3><p>首先访问网站：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.easyicon.net&#x2F;</span><br></pre></td></tr></table></figure><p>找一张（32*32）的ico图标，或者自己制作也行，图标名称改为<code>favicon.ico</code> 。放在路径：<code>/themes/next/source/images</code> 里。</p><p><img src="/posts/1410804403/24.png" alt></p><p>之后打开<code>主题配置</code>文件，搜索并找到favicon，修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon.ico</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon.ico</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/25.png" alt></p><p>保存后本地预览，可以看到博客图标已经不是默认的了。</p><p><img src="/posts/1410804403/26.png" alt></p><h3 id="8-创建标签页"><a href="#8-创建标签页" class="headerlink" title="8.创建标签页"></a>8.创建标签页</h3><p>看似最简单的一个问题搞得我差点心态崩了。请看我踩的坑。</p><p>新建标签页首先在根目录下执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/27.png" alt></p><p>执行后会在根目录<code>source</code>文件夹里新建<code>tags</code>。而<code>index.md</code>就是标签页。</p><p><img src="/posts/1410804403/28.png" alt></p><p>打开<code>index.md</code>，最后面添加一行<code>type: &quot;tags&quot;</code> 注意冒号后有一空格。</p><p><img src="/posts/1410804403/29.png" alt></p><p>保存之后本地预览，出现了错误，还是显示找不到标签。</p><p><img src="/posts/1410804403/30.png" alt></p><p>这个看似简单的问题真的是搞得我，查找了好多资料。在快要放弃时找到了，原来是Bug。在<code>主题配置文</code>件里，菜单设置里<code>/</code>后面应该没有空格直接跟<code>||</code>。但是主题默认的是有空格的。所以导致找不到标签页。</p><p><img src="/posts/1410804403/31.png" alt></p><p>删除中间的空格。</p><p><img src="/posts/1410804403/32.png" alt></p><p>保存后本地预览，可以看到标签页已经可以使用了。至于标题是英语，换一下标题就行。</p><p><img src="/posts/1410804403/33.png" alt></p><p>在<code>tags</code>文件夹里的<code>index.md</code>文件把<code>title</code>修改为<code>标签</code>就OK 了。</p><p><img src="/posts/1410804403/34.png" alt></p><p>看到已经完全OK了。太难了，这个坑的我。</p><p><img src="/posts/1410804403/35.png" alt></p><h3 id="9-创建分类页"><a href="#9-创建分类页" class="headerlink" title="9.创建分类页"></a>9.创建分类页</h3><p>创建分类页、关于页等等菜单与第8步一样。</p><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>修改.md文件，主要title和type，type为<code>categories</code>。相对应。</p><h3 id="10-创建关于页"><a href="#10-创建关于页" class="headerlink" title="10.创建关于页"></a>10.创建关于页</h3><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>修改.md文件，主要title和type，type为<code>about</code>。相对应。</p><h3 id="11-显示当前浏览进度"><a href="#11-显示当前浏览进度" class="headerlink" title="11.显示当前浏览进度"></a>11.显示当前浏览进度</h3><p>打开<code>主题配置</code>文件，搜索找到<code>b2t</code>和<code>scrollpercent</code>。修改为<code>true</code>。</p><p><img src="/posts/1410804403/36.png" alt></p><p>保存后本地预览，效果如图。</p><p><img src="/posts/1410804403/37.png" alt></p><h3 id="12-个性化回到顶部"><a href="#12-个性化回到顶部" class="headerlink" title="12.个性化回到顶部"></a>12.个性化回到顶部</h3><p>自己找一张图片，或者直接用这我这张。</p><p>下载链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.lanzous.com&#x2F;i8nozmh</span><br></pre></td></tr></table></figure><p>把图片放在<code>source\images\</code> 下。</p><p><img src="/posts/1410804403/38.png" alt></p><p>打开文件，路径：<code>themes\next\source\css\_custom\custom.styl</code>。在最后粘贴以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;自定义回到顶部样式</span><br><span class="line">.back-to-top &#123;</span><br><span class="line">  right: 60px;</span><br><span class="line">  width: 70px;  &#x2F;&#x2F;图片素材宽度</span><br><span class="line">  height: 900px;  &#x2F;&#x2F;图片素材高度</span><br><span class="line">  top: -900px;</span><br><span class="line">  bottom: unset;</span><br><span class="line">  transition: all .5s ease-in-out;</span><br><span class="line">  background: url(&quot;&#x2F;images&#x2F;scroll.png&quot;);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;隐藏箭头图标</span><br><span class="line">  &gt; i &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.back-to-top-on &#123;</span><br><span class="line">    bottom: unset;</span><br><span class="line">    top: 100vh &lt; (900px + 200px) ? calc( 100vh - 900px - 200px ) : 0px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/39.png" alt></p><p>保存后本地预览，就可以看到动态效果了，但是这种返回顶部要使第11步的两项为<code>false</code>，否则会出现Bug。</p><p><img src="/posts/1410804403/40.png" alt></p><h3 id="13-修改博客字体"><a href="#13-修改博客字体" class="headerlink" title="13.修改博客字体"></a>13.修改博客字体</h3><p>访问网站：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;fonts.google.com&#x2F;</span><br></pre></td></tr></table></figure><p>找到自己想要设置的字体。</p><p>打开主题配置文件，找到<code>font</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # 外链字体库地址，例如 &#x2F;&#x2F;fonts.googleapis.com (默认值)</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # 全局字体，应用在 body 元素上</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Monda</span><br><span class="line"></span><br><span class="line">  # 标题字体 (h1, h2, h3, h4, h5, h6)</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family: Roboto Slab</span><br><span class="line"></span><br><span class="line">  # 文章字体</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Logo 字体</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # 代码字体，应用于 code 以及代码块</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br></pre></td></tr></table></figure><p>按照这种形式修改字体类型。字体为刚才网站上的字体名称。修改后保存。</p><p><img src="/posts/1410804403/41.png" alt></p><h3 id="14-添加站内搜索"><a href="#14-添加站内搜索" class="headerlink" title="14.添加站内搜索"></a>14.添加站内搜索</h3><p>首先安装插件，输入以下两个命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>之后先在<code>站点配置</code>里末尾增加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/43.png" alt></p><p>再在<code>主题配置</code>文件里搜索找到<code>local_search</code>修改为如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p><img src="/posts/1410804403/44.png" alt></p><p>保存后本地预览，效果如下：</p><p><img src="/posts/1410804403/42.gif" alt></p><h3 id="15-去掉文章中图片默认的边框"><a href="#15-去掉文章中图片默认的边框" class="headerlink" title="15.去掉文章中图片默认的边框"></a>15.去掉文章中图片默认的边框</h3><p>打开文件，路径：<code>/themes/next/source/css/_common/components/post/post-expand.styl</code>。</p><p>找到<code>img</code>，把<code>border</code>修改为<code>none</code>。</p><p><img src="/posts/1410804403/45.png" alt></p><p>保存后本地显示，文章中的图片就没有边框了。</p><p><img src="/posts/1410804403/46.png" alt></p><p><strong>OK！那本次分享就到这儿，喜欢的话记得打卡支持管家小e哦！！！</strong></p><p><strong>制作教程不易，以上教程内容均为管家小e原创，请勿搬运，转载请注明来源，如有错误，请指正，谢谢。</strong></p><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小米手机重新上锁教程</title>
      <link href="/posts/813489fd/"/>
      <url>/posts/813489fd/</url>
      
        <content type="html"><![CDATA[<!-- build time:Fri Jan 24 2020 22:19:09 GMT+0800 (GMT+08:00) --><h2 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h2><p>这次主要是关于小米手机重新上锁的教程。</p><a id="more"></a><p>嗨，大家好，关于手机刷机教程我已经推送了好几期了，由于我只有小米手机，其它机型操作可能有点不同，但是大的操作都是没有问题的，任何一部手机刷机都要解锁，刷入第三方Rec，清理，刷入Rom这么关键的几步，小米机型完全可以按照我的教程一步一步来。有的朋友问能不能出华为或者其它手机的教程，实在是没有办法实现，因为没有手机，有手机的话完全是可以搞搞的。</p><p>关于刷机还有很多的知识，比如获取Root，刷入Google框架，成功安装Google相机等，这都需要后面一步步实现，<strong>今天我就先推送一期给小米机型解BL锁后重新上锁的教程。</strong></p><p>小米手机解除BL锁后，按下电源键开机的时候会在屏幕正下方出现几秒的一把锁打开的图标，没有解锁的是没有这个图标的。</p><p>有的人不想刷机后就想回到最初的世界，仿佛坐时光机一样【滑稽】，想让自己的手机重新上锁，那么这期教程可以帮你。</p><p><strong>教程仅适用于小米机型的上锁，其它手机没有资源测试！！！</strong></p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>去MIUI论坛下载自己机型的官方Rom，论坛网址我之前的教程中都推送了。</p><p><img src="/posts/813489fd/1.png" alt></p><p><strong>2.</strong>因为之前的教程已经推送了几期了，完全可以刷入一个官方Rom，我这里不再演示怎么刷入的官方Rom，前面教程都是精髓。附上刷入成功截图。</p><p><img src="/posts/813489fd/2.png" alt></p><p><strong>3.</strong>刷入官方Rom只是开始，这时候你的手机还是解锁状态的。点击【全部参数】。</p><p><img src="/posts/813489fd/3.png" alt></p><p><strong>4.</strong>一直点击【MIUI版本号】，直到出现【已处于开发者模式】。</p><p><img src="/posts/813489fd/4.png" alt></p><p><strong>5.</strong>打开【开发者选项】。</p><p><img src="/posts/813489fd/5.png" alt></p><p><strong>6.</strong>点击【设备解锁状态】。</p><p><img src="/posts/813489fd/6.png" alt></p><p><strong>7.</strong>可以看到设备还是处于解锁状态的。</p><p><img src="/posts/813489fd/7.png" alt></p><p><strong>8.</strong>我这里提供小米手机重新上锁的批处理程序，获取方式见文末。</p><p><strong>注意：只适用于小米机型。</strong></p><p><strong>再次注意：重新上锁也会清空手机数据，包括图片，文件夹，音乐，记得备份！！！</strong></p><p>以管理员身份运行BL上锁批处理程序。</p><p><img src="/posts/813489fd/8.png" alt></p><p><strong>9.</strong>上锁的时候你的手机要在fast boot模式，也就是只有个机器人模式下【滑稽】，而且先刷入官方的Rom才能上锁，要不然不会成功。注意fast boot模式下记得数据线连接电脑啊，有的人自己操作出现问题，可能会怪我的教程有错误啥的，这锅俺可不背。</p><p><img src="/posts/813489fd/9.png" alt></p><p><strong>10.</strong>写入成功后重启就行。</p><p><img src="/posts/813489fd/10.png" alt></p><p><strong>11.</strong>开机后就可以看到手机又重新上锁了。</p><p><img src="/posts/813489fd/11.png" alt></p><p><strong>OK！那我们这期关于小米手机重新上锁教程到此结束，小伙伴记得打卡支持管家小e哦！！！</strong></p><p><strong>教程制作不易，以上教程都是管家小e原创，切勿搬运，转载请注明来源，如果有错误请指正，谢谢！</strong></p><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机跳过Google开机验证</title>
      <link href="/posts/28189/"/>
      <url>/posts/28189/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Jan 25 2020 20:32:05 GMT+0800 (GMT+08:00) --><h2 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h2><p>本次教程是安卓原生、类原生ROM如何跳过Google开机验证。</p><a id="more"></a><p>嗨，大家好，之前给大家出了一些教程，这两天我想刷海外版的MIUI 11，所以刚好又可以出一点教程，因为之前手机里文件太多了，每次刷一次ROM数据备份挺麻烦的。所以就一直拖着。</p><p>这次给大家推送的是<strong>安卓原生系统或者类原生系统如何跳过Google开机验证。</strong>Google的开机设置向导对刷机党来说估计很熟悉了，刷好ROM（原生、类原生）后，开机重启，就会<strong>让你登陆Google账户才能让你进入桌面</strong>，这一点对国内的朋友来说是个难题，因为大家都知道想要登陆Google账号就要科学上网，如果进入桌面了，你还可以通过一些其它的手段科学上网，但是启动之后在只能连接WiFi或者手机数据的情况下，手机自身肯定是无法科学上网的（路由器配置了科学上网除外）。不通过这一步，你连桌面都进不去，更别说其它了。这就是所说的Google的开机验证。</p><p>那么今天就教大家怎么处理这个情况。有一点需要注意，我不提供科学上网方式，无论怎么弄，都是需要电脑端能科学上网的。</p><p>其实原理很简单，就是<strong>在电脑端科学上网，然后通过共享软件把它共享出去</strong>，当然这里的共享软件不是啥某数字的网络共享啥的这类软件哈，这类软件是没办法共享的。<strong>电脑端共享出去后在手机端连接电脑端共享的具有能科学上网的WiFi。就能科学上网从而登陆Google账号啦。</strong></p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>首先我们需要安装一个电脑科学上网软件，很多人可能都听过，有些网吧都是安装了的，那就是SSTap。安装包我会放在公众号里，回复看关键词，特殊工具，请低调使用。但是我是不提供服务器节点的。SSTap体验还是非常好的，但是开发者好像不再维护了。</p><p><img src="/posts/28189/1.png" alt></p><p><strong>2.</strong>之后还要再安装一个WiFi共享软件，这个共享软件真的牛批，不得不说，Connetify Hostpot是付费软件，安装后试用吧。安装后重启。</p><p>运行后点击WIFI热点选项，创建热点，要共享的Internet，选择前面带TAP的，因为这个是SSTap的代理网络。热点名称和密码自己设置或者默认都可。点击启动热点。</p><p><img src="/posts/28189/2.png" alt></p><p><strong>3.</strong>当手机连接后会显示一些信息等等。非常牛皮。忘了，这软件我也会放在公众号里。</p><p><img src="/posts/28189/3.png" alt></p><p><strong>4.</strong>原生系统或者类原生系统开机就是类似这样，任务栏锁就是Google验证。点击开始。</p><p><img src="/posts/28189/4.png" alt></p><p><strong>5.</strong>进入网络选择，连接刚才共享的WiFi。</p><p><img src="/posts/28189/5.png" alt></p><p><strong>6.</strong>连接成功，此时手机就可以科学上网的。</p><p><img src="/posts/28189/6.png" alt></p><p><strong>7.</strong>现在就是在Google验证，进行检查更新。</p><p><img src="/posts/28189/7.png" alt></p><p><strong>8.</strong>这些都是Google的开机向导界面。但是前提都是要能科学上网。</p><p><img src="/posts/28189/8.png" alt></p><p><strong>9.</strong>登陆自己的Google账号。使用原生、类原生系统或者国际版本的一些ROM，Google账号基本都要登陆。</p><p><img src="/posts/28189/9.png" alt></p><p><strong>10.</strong>向导设置好后就可以进入桌面了。</p><p><img src="/posts/28189/10.png" alt></p><h3 id="常见问题处理方法："><a href="#常见问题处理方法：" class="headerlink" title="常见问题处理方法："></a>常见问题处理方法：</h3><p><strong>1.</strong>注意SSTap配置后要能在电脑上访问Google，自己打开YouTube或者Google试试，看能不能访问，如果配置后电脑都无法访问，那肯定是不能成功的。</p><p><strong>2.</strong>注意配置Connetify Hotspot的时候选择【TAP-Windows Adapter V9】。</p><p><strong>3.</strong>保证电脑网络的稳定，不要看视频等等造成网络不好。</p><p><strong>OK！那本期教程就到此为止，喜欢的话记得打卡支持支持管家小e哦！！！</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 手机刷机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google验证 </tag>
            
            <tag> 安卓 </tag>
            
            <tag> 手机刷机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Hexo搭建个人静态博客教程—第四篇</title>
      <link href="/posts/2357711794/"/>
      <url>/posts/2357711794/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Jan 25 2020 21:14:23 GMT+0800 (GMT+08:00) --><p>嗨，大家好，终于又迎来了这期，写教程真的累，但是我也习惯了这种记录，我现在无论干点啥，总是想截屏，看不能保存下来作为教程。哈哈哈。</p><a id="more"></a><p>那这期<strong>教程主要是更改Hexo主题</strong>，原装的主题还是挺丑的。有很多非常好看、简约风格的主题。</p><p>那不多说，开始吧。</p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>存放主题的文件夹是themes。里面的一个主题一个文件夹。主题文件夹里有主题的一些配置。</p><p><img src="/posts/2357711794/1.png" alt></p><p><strong>2.</strong>访问Hexo网站，网址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br></pre></td></tr></table></figure><p>里面有非常多的Hexo主题，涉及了各种风格。挑选自己喜欢的吧。</p><p><img src="/posts/2357711794/2.png" alt></p><p><strong>3.</strong>选好之后点击进入主题介绍。</p><p><img src="/posts/2357711794/3.png" alt></p><p><strong>4.</strong>会自动跳转到作者的GitHub，里面有主题的下载方式和注意的事项等等。下载主题前仔细阅读这些。</p><p><img src="/posts/2357711794/4.png" alt></p><p><strong>5.</strong>我这里以<strong>NexT</strong>主题为例，这个主题是所有主题里貌似最受欢迎的，我也喜欢它的那种简约的风格。非常舒服。</p><p>NexT主题配置网址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;theme-next.iissnan.com&#x2F;getting-started.html</span><br></pre></td></tr></table></figure><p>包含了主题的一些配置等等，喜欢的去看看。</p><p>打开Git，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>安装NexT主题。</p><p><img src="/posts/2357711794/5.png" alt></p><p><strong>6.</strong>安装完成后会在主题文件夹里找到它。</p><p><img src="/posts/2357711794/6.png" alt></p><p><strong>7.</strong>之后打开网站配置文件 _config.yml。找到theme。修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>这里的next是主题的名称，以上面的主题文件夹里的文件夹名为准。区分大小写。以后改主题都是这样。</p><p><img src="/posts/2357711794/7.png" alt></p><p>以上就是关于主题更改的教程，非常简单。修改完之后上传部署就可以了。</p><hr><h2 id="其它配置："><a href="#其它配置：" class="headerlink" title="其它配置："></a>其它配置：</h2><p><strong>1.</strong>关于博文的主题时间等等还有一点配置。</p><p>上传部署后可以发现，文章的标题、时间、tags标签等等，但是最关键的是它把博文都显示出来了，怎么说呢？就是我们一般见到的都是在首页只看到文章的标题和一点简单的摘要，就像微信公众号文章一样，点击进去才是全文阅览。</p><p>但是这种全文都显示出来，导致文章的标题主题不明确。</p><p><img src="/posts/2357711794/8.png" alt></p><p><strong>2.</strong>解决办法就是在用Markdown书写时，前面写一点摘要或者概述。</p><p>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>之后再书写全文。</p><p><img src="/posts/2357711794/9.png" alt></p><p><strong>3.</strong>上传部署后我们看到是不是更好了。文章的主题标题更明显了，文章与文章直接也有了界限。</p><p>在首页只显示文章的标题、摘要、标签等等。全文用Read more隐藏，点击后才跳转到全文。</p><p><img src="/posts/2357711794/10.png" alt></p><p><strong>4.</strong>全文阅读右边有各级标题，很不错。</p><p><img src="/posts/2357711794/11.png" alt></p><p><strong>5.</strong>看上面的界面，还是不太整洁。</p><p>可以把前面的title、data等去掉，因为看标题和时间重复了，主题上传后标题和时间都有，那下面的就没必要了。</p><p>只要在md编辑器中删除最前面的那些，留下简单的摘要或者概述就行。</p><p>而且，之前的tags跳下一行的时候有Bug，第一次可能回车换行后光标又跳到tags后面了，你必须要再换一次行。</p><p>所以我一般都是删除的把这些，当然，如果你喜欢的话都可以留着。</p><p>之后再more，再写全文。</p><p><img src="/posts/2357711794/12.png" alt></p><p><strong>6.</strong>看，这样上传后会显示的非常整洁，既让读者了解你的文章的摘要主旨，还能避免看起来很乱的缺点。你觉得是不是这样？哈哈哈。</p><p><img src="/posts/2357711794/13.png" alt></p><p>如果你想要保存的话你就按照下面格式书写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019&#x2F;3&#x2F;26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><p>也能起到作用，并且拥有标签、分类等等，这样在后面博客增加分类、标签栏目是有好处的。</p><p><strong>OK！那本期教程就到此为止。下期主要是关于主题添加一些好玩意的教程。喜欢的话记得打卡支持管家小e哦！</strong></p><p><strong>制作教程不易，以上教程均为管家小e原创，请勿搬运，转载请注明来源，如有错误，请指正，谢谢。</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> GitHub </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> NexT </tag>
            
            <tag> 教程 </tag>
            
            <tag> 博客主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Hexo搭建个人静态博客教程—第三篇</title>
      <link href="/posts/1001048791/"/>
      <url>/posts/1001048791/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Jan 25 2020 21:14:23 GMT+0800 (GMT+08:00) --><p>嗨，大家好，这期是使用GitHub+Hexo搭建个人静态博客第三期了。<strong>主要是关于如何写博客，如何搭配图文，如何上传部署博客。</strong></p><a id="more"></a><p>关于如何写博客，Hexo支持Markdown，所以可以用之前我分享的<strong>Markdown编辑器——Typora。</strong>不知道的朋友记得去看我之前的文章。</p><p>OK！那废话不多说，开始吧。</p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>首先在博客文件夹（关于博客文件夹上一期已经创建好了）里的根目录或者在根目录里进入source文件夹，再进入_posts文件夹，这个文件夹上期也介绍了，主要就是存放博客的文章。我这里在 _posts里打开Git。记住以后打开Git都是这样，后面不再描述。</p><p><img src="/posts/1001048791/1.png" alt></p><p><strong>2.</strong>创建新博客文章命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章题目&quot;</span><br></pre></td></tr></table></figure><p>我这里随便举例。</p><p><img src="/posts/1001048791/2.png" alt></p><p><strong>3.</strong>可以看到在_posts文件夹中创建了.md格式的Markdown文件。</p><p>但是这儿有个问题：</p><p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> （source文件夹中没有images的话新建一个）文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p><p>但是，能想的到，一旦写的文章多了，图片多了，你把所有的图片都放到一个文件夹里，那整理起来将会非常麻烦。不便于管理博客文章和图片。</p><p>我们希望的是在新建.md文件的同时能在_posts文件夹中建立一个和.md文件同名的文件夹，用来存放这一个.md博文的图片。这样就便于管理了。</p><p><img src="/posts/1001048791/3.png" alt></p><p><strong>4.</strong>为了解决上述问题，Hexo也提供了解决方案。</p><p>打开博客配置文件_config.yml。上一期也说过打开方式。</p><p><img src="/posts/1001048791/4.png" alt></p><p><strong>5.</strong>找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>默认应该是false，改为true，注意冒号和true之间有一个空格，别删。</p><p>之后保存。</p><p><img src="/posts/1001048791/5.png" alt></p><p><strong>6.</strong>设置好后再新建.md文件（新建命令前面已有，之后不再赘述），发现_posts文件夹中出现了同名的文件夹和.md文件。满足我们的需求。有助于更好的组织博客。以后就可以把这篇博文的图片放在同名文件夹里。</p><p><img src="/posts/1001048791/6.png" alt></p><p><strong>7.</strong>这里我再强调一下，我之前分享的那个Markdown编辑器——Typora。</p><p><strong>记得在设置里勾选图片相对路径。</strong></p><p>否则博客上传部署后图片不显示，我就吃过亏。</p><p><img src="/posts/1001048791/7.png" alt></p><p><strong>8.</strong>之后打开.md进行博文书写。插入同名文件夹里的图片可以看到路径是相对路径。</p><p><img src="/posts/1001048791/8.png" alt></p><p><strong>9.</strong>记得把关于这篇博文的相关图片都存放在同名的文件夹里。</p><p><img src="/posts/1001048791/9.png" alt></p><p><strong>10.</strong>之后再发布，我在这里总结一下常用的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure><p>发布的时候可以用这几条：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo d                # 部署</span><br></pre></td></tr></table></figure><p>发布完成后如果博客页面还没更新可以耐心等待一下再访问博客网址。</p><p>我发布上去的如下图，但是发现了一个问题，可以看到图片没有上传。就连本地预览都没有图片。</p><p>这个问题看下一步。</p><p><img src="/posts/1001048791/10.png" alt></p><p><strong>11.</strong>导致这个问题的原因有很多，但是如果按照我的教程一步一步走的，应该遇到的问题和我一样，那么解决方法也差不多。</p><p>我这个解决方法来源于csdn。感谢这位老哥，网址附上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xjm850552586&#x2F;article&#x2F;details&#x2F;84101345</span><br></pre></td></tr></table></figure><p>我这个问题解决方法是需要一个插件，Git输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><p><img src="/posts/1001048791/11.png" alt></p><p>但是这个插件的内容需要修改，不然会出现Bug。</p><p>修改如下：</p><p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码。</p><p><strong>要说的一点就是，每次更改内容前最好备份一下，以免更改后有问题想回去都回不去。这一点很重要。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link &#x3D; data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">&#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">   !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">  &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">  $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="/posts/1001048791/12.png" alt></p><p>更改保存后重新清除缓存上传，可以看到图片可以显示出来了，上传后耐心等待，或者多刷新。</p><p><img src="/posts/1001048791/13.png" alt></p><p><strong>OK！那本期关于博文上传部署等等教程就到此为止。下期分享关于更改主题，还有一些其它配置的教程。喜欢的话记得打卡支持管家小e哦！！！</strong></p><p><strong>制作教程不易，以上教程均为管家小e原创，请勿搬运，转载请注明来源，如有错误，请指正，谢谢。</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> GitHub </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> NexT </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Hexo搭建个人静态博客教程—第二篇</title>
      <link href="/posts/1991534981/"/>
      <url>/posts/1991534981/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Jan 25 2020 21:14:23 GMT+0800 (GMT+08:00) --><p>嗨，大家好，今天到了使用GitHub+Hexo搭建个人博客的第二期了，第一期我的天，阅读量还不如一个小软件的，这也算是一个小干货教程啊，咋没人看捏。</p><a id="more"></a><p>OK！那今天就进行第二期了，<strong>主要是在本地安装Hexo博客，以及把博客上传到GitHub上去。</strong>插一句哈，这一期教程是接上上一期的，如果你上一期没有成功的话，是没办法进行这期的。OK！废话不多说，直接开始。</p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>首先在磁盘里新建一个文件夹，用来存放个人博客的程序、主题以及后面你要写的文章。路径最好不要有中文。新建后打开文件夹，右键，点击【Git Bash Here】。进入git命令窗口。</p><p><img src="/posts/1991534981/1.png" alt></p><p><strong>2.</strong>使用npm安装Hexo博客程序。输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>耐心等待，时间可能有点长，出现下图第二个红框内容完成。</p><p><img src="/posts/1991534981/2.png" alt></p><p><strong>3.</strong>初始化和安装所需的组件，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="/posts/1991534981/3.png" alt></p><p><strong>4.</strong>初始化完成后安装组件，继续输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="/posts/1991534981/4.png" alt></p><p><strong>5.</strong>完成安装后启用本地服务器进行本地预览，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g#生成页面</span><br></pre></td></tr></table></figure><p><img src="/posts/1991534981/5.png" alt></p><p><strong>6.</strong>继续输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s#启动预览</span><br></pre></td></tr></table></figure><p>这时候就可以本地预览了，但是注意在预览时不要按Ctrl +C 停止预览，否则就无法预览了。</p><p><img src="/posts/1991534981/6.png" alt></p><p><strong>7.</strong>在上面不关闭预览的前提下在浏览器中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:4000</span><br></pre></td></tr></table></figure><p>已经可以看到个人博客的主题了，这是Hexo的默认界面，本地博客安装到此成功。</p><p><img src="/posts/1991534981/7.png" alt></p><p><strong>8.</strong>之前新建的文件夹中也存储了博客的各种配置，就先几个主要的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public#网站文件</span><br><span class="line">themes#主题文件夹，用来存放主题，后面在美化博客的时候经常要用</span><br><span class="line">source#存放用户文件，主要存放用户写的文章，图片等等。</span><br><span class="line">_config.yml #网站的配置信息，要跟主题里的配置信息分开，主题文件夹里也有一个同名的文件，后面配置的时候经常用它们俩。</span><br></pre></td></tr></table></figure><p><img src="/posts/1991534981/8.png" alt></p><p><strong>9.</strong>本地刚才预览已经没有问题，那么就要上传到GitHub进行部署。使其能够通过域名或者网址访问。</p><p>首先安装hexo-deployer-git。输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>耐心等待</p><p><img src="/posts/1991534981/9.png" alt></p><p><strong>10.</strong>在博客文件夹中用其他方式打开网站配置文件_config.yml。</p><p><img src="/posts/1991534981/10.png" alt></p><p><strong>11.</strong>如果你的电脑上有其他文本编辑器或者写代码的编辑器，那么你可以用其它文本编辑器打开，如果没有的话，就用记事本打开。</p><p><img src="/posts/1991534981/11.png" alt></p><p><strong>12.</strong>由于我电脑上有其它代码编辑器，那么我就不用文本编辑器了，毕竟用代码编辑器改代码这种高亮的格式还是很舒服的。</p><p>在文件的末尾加上下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>具体见下图。之后保存退出。</p><p><img src="/posts/1991534981/12.png" alt></p><p><strong>13.</strong>完成后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d#部署发布</span><br></pre></td></tr></table></figure><p>将网站上传部署到GitHub仓库中。</p><p><img src="/posts/1991534981/13.png" alt></p><p><strong>14.</strong>上传成功后我们就可以用网址进行访问了，网址为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;用户名.github.io</span><br></pre></td></tr></table></figure><p>具体可看我下图。</p><p>可以看到Hexo的默认主题了。我还是非常喜欢Hexo这种简约风格的主题。不太喜欢花里胡哨的。</p><p><img src="/posts/1991534981/14.png" alt></p><p><strong>OK！那本期教程就到这里，下期教程主要是怎么在个人博客上发布文章。喜欢的话记得支持支持管家小e哦！！！</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> GitHub </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> NexT </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Hexo搭建个人博客教程—第一篇</title>
      <link href="/posts/4016344974/"/>
      <url>/posts/4016344974/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Jan 25 2020 20:32:05 GMT+0800 (GMT+08:00) --><p>嗨，大家好，你们的万金油管家小e又来了，这次就教大家一些<strong>利用GitHub和Hexo本地服务器搭建个人博客的教程</strong>，可能教程要好几期。那么这期就先从最最基础的<strong>GitHub的注册，以及本地环境的搭建，GitHub仓库的建立</strong>等等开始。</p><a id="more"></a><p>近年来很多人都喜欢用GitHub和Hexo来搭建个人博客网站。因为搭建本地服务器的个人博客是免费的，你可以直接用GitHub的域名，不需要买域名，也不需要买主机。而且非常稳定。</p><p>搭建出一个属于自己的个人博客网站会让你心里觉得nice，而且也是对你能力的一个提升，很多学生兴趣来了学前端，跟着视频教程还没走完就放弃了，这种学习效果不是很好，最好的就是从实战中遇到问题不断学习。从而提高自己。通过搭建自己的GitHub个人博客，后期你可以运用起来你学过的前端知识，不断优化自己的博客。我想这是非常不错的。</p><p>当然，基于GitHub和Hexo搭建的本地服务器的个人博客也是有缺点的，就是灵活性差，访问速度慢一点。但是作为新手搞绝对是很不错的。</p><p>OK！知道很多人可能没有基础，我会在教程中详细的介绍。</p><p>利用GitHub和Hexo搭建静态个人博客，这里的静态博客并不是字面意思，不是啥都不动的这个意思哈。</p><p><strong>静态网页</strong>简单来说就是设计者把页面的东西设计好了，只是发布上去，本地浏览器就能访问。而<strong>动态网页</strong>的内容都是依靠服务器来运行的。管理者发布文章的时候只需要进入后台发布就行，发布后想更改也非常容易。需要主机来存放网站的源码等数据。</p><p>OK！那静态博客和动态博客清楚了，我们废话不多说，直接开始教程。</p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>1.</strong>Hexo基于Node.js，搭建中还需要npm（Node.js自带）和git，因此我们需要首先搭建本地环境。安装Node.js和Git。</p><p>Node.js安装：</p><p><strong>Node.js官网：<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></strong></p><p>进入官网后下载Windows（x64）长期支持版。</p><p><img src="/posts/4016344974/1.png" alt></p><p><strong>2.</strong>安装位置最好选择默认，我这里选择默认，其它选项默认。点击下一步。</p><p><img src="/posts/4016344974/2.png" alt></p><p><strong>3.</strong>由于安装很简单，我不再赘述，附上截图。</p><p><img src="/posts/4016344974/3.png" alt></p><p><strong>4.</strong>安装Git：</p><p><strong>Git官网下载网址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></strong></p><p>选择自己的平台，我选择Windows。点击下载。</p><p><img src="/posts/4016344974/4.png" alt></p><p><strong>5.</strong>选择自己的电脑对应的位数进行下载，我是64位电脑。</p><p><img src="/posts/4016344974/5.png" alt></p><p><strong>6.</strong>安装也非常简单，选项和安装位置默认，点击下一步。</p><p><img src="/posts/4016344974/6.png" alt></p><p><strong>7.</strong>安装简单，不再赘述，附上截图。</p><p><img src="/posts/4016344974/7.png" alt></p><p><strong>8.</strong>下面验证Node.js和Git是否安装成功，也就是本地环境是否搭建成功。Win+R打开运行。输入cmd，进入命令提示符。</p><p><img src="/posts/4016344974/8.png" alt></p><p><strong>9.</strong>依次输入：（注意输入法在英文状态下）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p>如果出现对应的版本号，那么表示本地环境搭建成功。</p><p><img src="/posts/4016344974/9.png" alt></p><p><strong>10.GitHub官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></strong></p><p>打开GitHub官网，点击注册。</p><p><img src="/posts/4016344974/10.png" alt></p><p><strong>11.</strong>注册自己的用户名，绑定邮箱等等。</p><p><img src="/posts/4016344974/11.png" alt></p><p><strong>12.</strong>选择免费的账户。</p><p><img src="/posts/4016344974/12.png" alt></p><p><strong>13.</strong>这是GitHub对新手的一点调查吧算是，有兴趣的可以选选，没兴趣的话跳过。</p><p><img src="/posts/4016344974/13.png" alt></p><p><strong>14.</strong>我这里直接点击跳过。</p><p><img src="/posts/4016344974/14.png" alt></p><p><strong>15.</strong>之后GitHub会向你的注册邮箱发送验证，打开你的邮箱，进行验证，显示红框表示验证通过，先不用着急新建仓库哈。这一步就到这结束。</p><p><img src="/posts/4016344974/15.png" alt></p><p><strong>16.</strong>接下来在桌面或者哪儿都可以，鼠标右键，点击【Git Bash Here】。</p><p><img src="/posts/4016344974/16.png" alt></p><p><strong>17.</strong>依次输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="/posts/4016344974/17.png" alt></p><p><strong>18.</strong>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后一路回车。创建SSH密匙。</p><p><img src="/posts/4016344974/18.png" alt></p><p><strong>19.</strong>进入下面路径，如果不显示的记得选择显示隐藏的项目。</p><p><strong>路径：C：\用户\用户名\ .ssh</strong></p><p><img src="/posts/4016344974/19.png" alt></p><p><strong>20.</strong>用记事本打开id_rsa.pub文件。复制文件中的内容。</p><p><img src="/posts/4016344974/20.png" alt></p><p><strong>21.</strong>登陆GitHub，进入setting。</p><p><img src="/posts/4016344974/21.png" alt></p><p><strong>22.</strong>选择左边SSH and GPG Keys选项。进行添加密匙。</p><p><img src="/posts/4016344974/22.png" alt></p><p><strong>23.</strong>点击New SSH Key进行添加。</p><p><img src="/posts/4016344974/23.png" alt></p><p><strong>24.</strong>title自己随便取，把刚才复制的密匙粘贴到Key中，点击Add SSH Key添加完成。</p><p><img src="/posts/4016344974/24.png" alt></p><p><strong>25.</strong>打开Git Bash，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现Are you sure……的时候输入yes回车。</p><p>最后显示You’ve successfully……的时候表示连接成功。</p><p><img src="/posts/4016344974/25.png" alt></p><p><strong>26.</strong>点击右上角加号，点击New repository新建GitHub Pages仓库。</p><p><img src="/posts/4016344974/26.png" alt></p><p><strong>27.</strong>在Repository name中输入：用户名.github.io</p><p>勾选“Initialize this repository with a README”</p><p>Description选填。</p><p>填好后点击Create repository。创建后默认启用HTTPS。</p><p><strong>博客的地址为:https://用户名.github.io</strong></p><p><img src="/posts/4016344974/27.png" alt></p><p><strong>28.</strong>新建后的仓库如下，是不是很眼熟。</p><p><img src="/posts/4016344974/28.png" alt></p><p><strong>GitHub Pages是什么？</strong></p><p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。我把它理解为动态网站的主机。功能都很类似。</p><p><strong>Ok!本期关于GitHub的注册以及本地环境的搭建等等教程就到此为止。后续部分后几期更新。喜欢的话记得打卡支持支持管家小e哦！</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> GitHub </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> NexT </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
